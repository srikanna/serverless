swagger: "2.0"
info:
  version: "1.0.0"
  title: Spacefinder-API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /Prod
#
schemes:
  # tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /locations:
    get:
      description: Returns List of 'Locations'
      # used as the method name of the controller
      operationId: locations-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LocationsListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - spacefinder-userPool-authorizer: []
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:691844857431:function:${stageVariables.locationsfn}/invocations/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"      
    post:
      description: Adds a Location
      operationId: locations-Create
      parameters:
      - $ref: "#/parameters/Location"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Location"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - sigv4: []
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:691844857431:function:${stageVariables.locationscreatefn}/invocations/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      consumes:
      - "application/json"
      responses:
        200:
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"        
parameters:
  Location:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Location"
  LocationId:
    in: "path"
    name: "locationId"
    required: true
    type: string
  Resource:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Resource"
  ResourceId:
    in: "path"
    name: "resourceId"
    required: true
    type: string
  UserId:
    in: "path"
    name: "userId"
    required: true
    type: string
  BookingId:
    in: "path"
    name: "bookingId"
    required: true
    type: string
  Booking:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Booking"
# complex objects have schema definitions
definitions:
  LocationsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Location"
  Location:
    required:
    - name
    properties:
      locationId:
        type: string
      name:
        type: string
      description:
        type: string
      imageUrl:
        type: string
  ResourcesListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Resource"
  Resource:
    required:
    - name
    properties:
      resourceId:
        type: string
      locationId:
        type: string
      name:
        type: string
      description:
        type: string
  BookingsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Booking"
  Booking:
    required:
    - locationId
    - resourceId
    - userId
    properties:
      bookingId:
        type: string
      locationId:
        type: string
      locationName:
        type: string
      resourceId:
        type: string
      userId:
        type: string
      userFirstName:
        type: string
      userLastName:
        type: string
      resourceName:
        type: string
      resourceDescription:
        type: string
      timeslot:
        type: string
      startTimeIsoTimestamp:
        type: string
      startTimeEpochTime:
        type: number
      endTimeIsoTimestamp:
        type: string
      endTimeEpochTime:
        type: number
  ErrorResponse:
    required:
      - message
      - type
    properties:
      message:
        type: string
      type:
        type: string
securityDefinitions:
  spacefinder-userPool-authorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authorizer':
      providerARNs:
      - "arn:aws:cognito-idp:us-east-2:691844857431:userpool/us-east-2_z9eXy7BrY"
      type: "cognito_user_pools"
  sigv4:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "awsSigv4"
